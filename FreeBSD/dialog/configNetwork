#!/bin/sh

INTERFACES=""
BSDDIALOG_ITEMS=""

: ${BSDDIALOG_OK=0}
: ${BSDDIALOG_CANCEL=1}
: ${BSDDIALOG_HELP=2}
: ${BSDDIALOG_EXTRA=3}
: ${BSDDIALOG_ESC=5}
: ${BSDDIALOG_ERROR=255}

for IF in `ifconfig -l`; do
        test "$IF" = "lo0" && continue
        (ifconfig -g wlan | egrep -wq $IF) && continue
        INTERFACES="$INTERFACES $IF"
done

#debug1
#echo $INTERFACES

for IF in $INTERFACES; do
        #DESC=`sysctl -n dev.$(echo $IF | sed -E 's/([[:alpha:]]*)([[:digit:]]*)/\1.\2/g').%desc`
        BSDDIALOG_ITEMS="$BSDDIALOG_ITEMS $IF \"$DESC\""
done

#debug2
#INTERFACES=""

if [ -z "$INTERFACES" ]; then
        bsddialog --backtitle "XLOG Firewall" \
            --title 'Network Yapılandırma Hatası' \
            --msgbox 'Yapılandırılacak network arabirimi bulunamadi.' 0 0
        exit 1
fi

exec 3>&1
INTERFACE=`echo $BSDDIALOG_ITEMS | xargs -o bsddialog --backtitle "XLOG Firewall" --title 'Network Yapılandırması' --menu 'Lütfen ayarlamak istediğiniz network arabirimini seçiniz:' 0 0 0 2>&1 1>&3`
if [ $? -eq $BSDDIALOG_CANCEL ]; then exit 1; fi
echo $INTERFACE
exec 3>&-

IPV6_AVAIL=0
IPV4_AVAIL=0
sysctl -N kern.features.inet6 > /dev/null 2>&1
case $? in
0)      IPV6_AVAIL=1 ;;
esac
sysctl -N kern.features.inet > /dev/null 2>&1
case $? in
0)      IPV4_AVAIL=1 ;;
esac

#if [ ${IPV4_AVAIL} -eq 1 ]; then
        #bsddialog --backtitle "XLOG Firewall" --title 'Network Yapılandırması' \
        #    --yesno 'Bu arabirim icin IPv4 adresi ayarlamak istiyor musunuz? ' 0 0
        #if [ $? -eq $BSDDIALOG_OK ]; then
                ./netconfig_ipv4 ${INTERFACE} || \
                exec $0
        #else
        #        IPV4_AVAIL=0
        #fi
#fi

SEARCH=""
IP4_1=""
IP4_2=""
IP6_1=""
IP6_2=""
while read key value; do
        case "${key}" in
        search)         SEARCH="${value}" ;;
        nameserver)     # is more trick as we have to distinguish v4 and v6
                case "${value}" in
                [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*)
                        if [ -z "${IP4_1}" ] ; then
                                IP4_1="${value}"
                        elif [ -z "${IP4_2}" ]; then
                                IP4_2="${value}"
                        fi
                        ;;
                [0-9A-Fa-f:]*:*)
                        if [ -z "${IP6_1}" ] ; then
                                IP6_1="${value}"
                        elif [ -z "${IP6_2}" ]; then
                                IP6_2="${value}"
                        fi
                        ;;
                esac
                ;;
        # ignore others
        esac
done < /etc/resolv.conf

RESOLV=""
if [ ${IPV4_AVAIL} -eq 1 ]; then
        RESOLV="
            'Search' 1 1 \"${SEARCH}\" 1 16 50 50 0
            'Nameserver' 2 1 \"Nameserver\" 2 1 11 11 2
            'IPv4 DNS #1' 2 1 \"${IP4_1}\" 2 16 16 16 0
            'IPv4 DNS #2' 3 1 \"${IP4_2}\" 3 16 16 16 0"
else
        exit 0
fi

exec 3>&1
RESOLV=$(echo "${RESOLV}" | xargs -o bsddialog --backtitle "XLOG Firewall" \
        --title 'Network Yapılandırması' \
        --mixedform 'DNS Çözümleyici Yapılandırması' 0 0 0 \
2>&1 1>&3)
if [ $? -eq $BSDDIALOG_CANCEL ]; then exec $0; fi
exec 3>&-

echo ${RESOLV} | tr ' ' '\n' | \
awk '
BEGIN {
        search=-1;
}
{
        if (/^[[:space:]]+$/) {
                next;
        }
        if (/^Nameserver$/) {
                printf "\n";
                search=0;
                next;
        }
        if (search == -1) {
                printf "search ";
                search=1;
        }
        if (search > 0) {
                printf "%s%s", (search > 1) ? " " : "", $1;
                search++;
                next;
        }
        printf "nameserver %s\n", $1;
}' > /etc/resolv.conf
